# Use a lightweight Linux-based image (Alpine) instead of Windows (nanoserver)
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy project files and restore dependencies
COPY ["twist_and_solve_backend/twist_and_solve_backend.csproj", "twist_and_solve_backend/"]
RUN dotnet restore "./twist_and_solve_backend/twist_and_solve_backend.csproj"

# Copy the entire source code
COPY . .
WORKDIR "/src/twist_and_solve_backend"

# Build the application
RUN dotnet build "./twist_and_solve_backend.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./twist_and_solve_backend.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Final runtime image
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Set the entry point
ENTRYPOINT ["dotnet", "twist_and_solve_backend.dll"]
